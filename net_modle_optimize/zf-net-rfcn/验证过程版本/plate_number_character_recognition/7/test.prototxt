name: "ZF-512"

input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}

input: "im_info"
input_shape {
  dim: 1
  dim: 3
}
layer {
    name: "conv1_dw"
    type: "DepthwiseConvolution"
    bottom: "data"
    top: "conv1_dw"
    param {lr_mult: 1.0}
    param {lr_mult: 2.0}
    convolution_param {
      num_output: 3
      pad: 3
      kernel_size: 7
      stride: 2
      group: 3
      weight_filler {type: "msra"}
      bias_filler {type: "constant"}
    }
}
layer {
    name: "relu1_dw"
    type: "ReLU"
    bottom: "conv1_dw"
    top: "conv1_dw"
}
layer {
    name: "norm1_dw"
    type: "BatchNorm"
    bottom: "conv1_dw"
    top: "conv1_dw"
    batch_norm_param {use_global_stats: false}
}
layer {
    name: "scale1_dw"
    type: "Scale"
    bottom: "conv1_dw"
    top: "conv1_dw"
    param {lr_mult: 1.0}
    param {lr_mult: 2.0}
    scale_param {bias_term: true}
}
layer {
    name: "conv1_dw/neg"
    type: "Power"
    bottom: "conv1_dw"
    top: "conv1_dw/neg"
    power_param {
      power: 1
      scale: -1.0
      shift: 0
    }
}

layer {
    name: "conv1_dw/concat"
    type: "Concat"
    bottom: "conv1_dw"
    bottom: "conv1_dw/neg"
    top: "conv1_dw_cr"
}

layer {
    name: "shuffle1_dw"
    type: "ShuffleChannel"
    bottom: "conv1_dw_cr"
    top: "shuffle1_dw"
    shuffle_channel_param {
        group: 6
    }
}

layer {
        name: "pool1"
        type: "Pooling"
        bottom: "shuffle1_dw"
        top: "pool1"
        pooling_param {
                kernel_size: 3
                stride: 2
                pad: 1
                pool: MAX
        }
}
layer {
	name: "conv2"
	type: "Convolution"
	bottom: "pool1"
	top: "conv2"
	param { lr_mult: 1.0 }
	param { lr_mult: 2.0 }
	convolution_param {
		num_output: 256
		kernel_size: 5
		pad: 2
		stride: 2
	}
}
layer {
	name: "relu2"
	type: "ReLU"
	bottom: "conv2"
	top: "conv2"
}
layer {
	name: "norm2_new"
	type: "BatchNorm"
	bottom: "conv2"
	top: "norm2"
    batch_norm_param {
       use_global_stats: true 
    }
}
layer {
	name: "scale2"
	type: "Scale"
	bottom: "norm2"
	top: "norm2"
    scale_param {
        bias_term: true 
    }
    param {
        lr_mult : 1.0  
        decay_mult: 0.0 
    }
    param {
        lr_mult : 2.0  
        decay_mult: 0.0 
    }
}
layer {
        name: "pool2"
        type: "Pooling"
        bottom: "norm2"
        top: "pool2"
        pooling_param {
                kernel_size: 3
                stride: 2
                pad: 1
                pool: MAX
        }
}
layer {
	name: "conv3"
	type: "Convolution"
	bottom: "pool2"
	top: "conv3"
	param { lr_mult: 1.0 }
	param { lr_mult: 2.0 }
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
	}
}
layer {
	name: "relu3"
	type: "ReLU"
	bottom: "conv3"
	top: "conv3"
}
layer {
	name: "norm3_new"
	type: "BatchNorm"
	bottom: "conv3"
	top: "norm3"
    batch_norm_param {
       use_global_stats: true 
    }
}
layer {
	name: "scale3"
	type: "Scale"
	bottom: "norm3"
	top: "norm3"
    scale_param {
        bias_term: true 
    }
    param {
        lr_mult : 1.0  
        decay_mult: 0.0 
    }
    param {
        lr_mult : 2.0  
        decay_mult: 0.0 
    }
}
layer {
	name: "conv4"
	type: "Convolution"
	bottom: "norm3"
	top: "conv4"
	param { lr_mult: 1.0 }
	param { lr_mult: 2.0 }
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
	}
}
layer {
	name: "relu4"
	type: "ReLU"
	bottom: "conv4"
	top: "conv4"
}
layer {
	name: "norm4_new"
	type: "BatchNorm"
	bottom: "conv4"
	top: "norm4"
    batch_norm_param {
       use_global_stats: true 
    }
}
layer {
	name: "scale4"
	type: "Scale"
	bottom: "norm4"
	top: "norm4"
    scale_param {
        bias_term: true 
    }
    param {
        lr_mult : 1.0  
        decay_mult: 0.0 
    }
    param {
        lr_mult : 2.0  
        decay_mult: 0.0 
    }
}

layer {
    name: "norm_concat"
    type: "Concat"
    bottom: "norm4"
    #bottom: "norm3"
    bottom: "pool2"
    top: "norm_concat"
}

layer {
    name: "conv5"
    type: "Convolution"
    bottom: "norm_concat"
    top: "conv5"
    param { lr_mult: 1.0 }
    param { lr_mult: 2.0 }
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1

    }
}
layer {
	name: "relu5"
	type: "ReLU"
	bottom: "conv5"
	top: "conv5"
}

#========= RPN ============

layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "norm_concat"
  top: "rpn/output"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 512
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}

layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 18   # 2(bg/fg) * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 36   # 4 * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
   bottom: "rpn_cls_score"
   top: "rpn_cls_score_reshape"
   name: "rpn_cls_score_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}

#========= RoI Proposal ============

layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: 'rpn_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'rpn_cls_prob'
  top: 'rpn_cls_prob_reshape'
  reshape_param { shape { dim: 0 dim: 18 dim: -1 dim: 0 } }
}
layer {
       name: "proposal"
       type: "RPN"
       bottom: "rpn_cls_prob_reshape"
       bottom: "rpn_bbox_pred"
       bottom: "im_info"
       top: "rois"
       rpn_param {
           feat_stride : 16
           basesize : 16 
           scale : 8
           scale : 16
           scale : 32
           ratio : 0.5
           ratio : 1
           ratio : 2
           boxminsize : 16
           per_nms_topn : 6000
           post_nms_topn : 300
           nms_thresh : 0.7
       }
}


#----------------------new conv layer------------------
layer {
    bottom: "conv5"
    top: "conv_new_1"
    name: "conv_new_1"
    type: "Convolution"
    convolution_param {
        num_output: 1024
        kernel_size: 1
        pad: 0
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
    param {
        lr_mult: 1.0
    }
    param {
        lr_mult: 2.0
    }
}

layer {
    bottom: "conv_new_1"
    top: "conv_new_1"
    name: "conv_new_1_relu"
    type: "ReLU"
}

layer {
    bottom: "conv_new_1"
    top: "rfcn_cls"
    name: "rfcn_cls_new"
    type: "Convolution"
    convolution_param {
        num_output: 3528  #11*(7^2) cls_num*(score_maps_size^2)
        kernel_size: 1
        pad: 0
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
    param {
        lr_mult: 1.0
    }
    param {
        lr_mult: 2.0
    }
}
layer {
    bottom: "conv_new_1"
    top: "rfcn_bbox"
    name: "rfcn_bbox"
    type: "Convolution"
    convolution_param {
        num_output: 392 #8*(7^2) cls_num*(score_maps_size^2)
        kernel_size: 1
        pad: 0
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
    param {
        lr_mult: 1.0
    }
    param {
        lr_mult: 2.0
    }
}

#--------------position sensitive RoI pooling--------------
layer {
    bottom: "rfcn_cls"
    bottom: "rois"
    top: "psroipooled_cls_rois"
    name: "psroipooled_cls_rois"
    type: "PSROIPooling"
    psroi_pooling_param {
        spatial_scale: 0.0625
        output_dim: 72 
        group_size: 7
    }
}

layer {
    bottom: "psroipooled_cls_rois"
    top: "cls_score"
    name: "ave_cls_score_rois"
    type: "Pooling"
    pooling_param {
        pool: AVE
        kernel_size: 7
        stride: 7
    }
}


layer {
    bottom: "rfcn_bbox"
    bottom: "rois"
    top: "psroipooled_loc_rois"
    name: "psroipooled_loc_rois"
    type: "PSROIPooling"
    psroi_pooling_param {
        spatial_scale: 0.0625
        output_dim: 8
        group_size: 7
    }
}

layer {
    bottom: "psroipooled_loc_rois"
    top: "bbox_pred_pre"
    name: "ave_bbox_pred_rois"
    type: "Pooling"
    pooling_param {
        pool: AVE
        kernel_size: 7
        stride: 7
    }
}


#-----------------------output------------------------
layer {
   name: "cls_prob"
   type: "Softmax"
   bottom: "cls_score"
   top: "cls_prob_pre"
}

layer {
    name: "cls_prob_reshape"
    type: "Reshape"
    bottom: "cls_prob_pre"
    top: "cls_prob"
    reshape_param {
        shape {
            dim: -1
            dim: 72 
        }
    }
}

layer {
    name: "bbox_pred_reshape"
    type: "Reshape"
    bottom: "bbox_pred_pre"
    top: "bbox_pred"
    reshape_param {
        shape {
            dim: -1
            dim: 8  
        }
    }
}


