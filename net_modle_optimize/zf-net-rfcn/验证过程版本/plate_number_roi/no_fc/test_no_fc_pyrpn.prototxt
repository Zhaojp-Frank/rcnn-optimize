name: "ZF-512"

input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}

input: "im_info"
input_shape {
  dim: 1
  dim: 3
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 48
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
	name: "norm1_new"
	type: "BatchNorm"
	bottom: "conv1"
	top: "norm1"
    batch_norm_param {
       use_global_stats: false 
    }
}
layer {
  name: "scale1"
  type: "Scale"
  bottom: "norm1"
  top: "norm1"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2_depthwise"
  type: "DepthwiseConvolution"
  bottom: "pool1"
  top: "conv2_3x3"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 48
    pad: 2
    kernel_size: 5
    group: 48
    stride: 2
  }
}
layer {
  name: "conv2_3x3_relu"
  type: "ReLU"
  bottom: "conv2_3x3"
  top: "conv2_3x3"
}
layer {
  name: "conv2_1x1"
  type: "Convolution"
  bottom: "conv2_3x3"
  top: "conv2"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
	name: "relu2"
	type: "ReLU"
	bottom: "conv2"
	top: "conv2"
}
layer {
	name: "norm2_new"
	type: "BatchNorm"
	bottom: "conv2"
	top: "norm2"
    batch_norm_param {
       use_global_stats: false 
    }
}
layer {
  name: "scale2"
  type: "Scale"
  bottom: "norm2"
  top: "norm2"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "scale2"
  type: "Scale"
  bottom: "norm2"
  top: "norm2"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3_depthwise"
  type: "DepthwiseConvolution"
  bottom: "pool2"
  top: "conv3_3x3"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    group: 128
    stride: 1
  }
}
layer {
  name: "conv3_3x3_relu"
  type: "ReLU"
  bottom: "conv3_3x3"
  top: "conv3_3x3"
}
layer {
  name: "conv3_1x1"
  type: "Convolution"
  bottom: "conv3_3x3"
  top: "conv3"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 192
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
	name: "norm3_new"
	type: "BatchNorm"
	bottom: "conv3"
	top: "norm3"
    batch_norm_param {
       use_global_stats: false 
    }
}
layer {
  name: "scale3"
  type: "Scale"
  bottom: "norm3"
  top: "norm3"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_depthwise"
  type: "DepthwiseConvolution"
  bottom: "norm3"
  top: "conv4_3x3"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    group: 192
    stride: 1
  }
}
layer {
  name: "conv4_3x3_relu"
  type: "ReLU"
  bottom: "conv4_3x3"
  top: "conv4_3x3"
}
layer {
  name: "conv4_1x1"
  type: "Convolution"
  bottom: "conv4_3x3"
  top: "conv4"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 192
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
	name: "norm4_new"
	type: "BatchNorm"
	bottom: "conv4"
	top: "norm4"
    batch_norm_param {
       use_global_stats: false 
    }
}
layer {
  name: "scale4"
  type: "Scale"
  bottom: "norm4"
  top: "norm4"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_depthwise"
  type: "DepthwiseConvolution"
  bottom: "norm4"
  top: "conv5_3x3"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    group: 192
    stride: 1
  }
}
layer {
  name: "conv5_3x3_relu"
  type: "ReLU"
  bottom: "conv5_3x3"
  top: "conv5_3x3"
}
layer {
  name: "conv5_1x1"
  type: "Convolution"
  bottom: "conv5_3x3"
  top: "conv5"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 2.0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}

#========= RPN ============

layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "norm4"
  top: "rpn/output"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 512
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}

layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 18   # 2(bg/fg) * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 36   # 4 * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
   bottom: "rpn_cls_score"
   top: "rpn_cls_score_reshape"
   name: "rpn_cls_score_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}

#========= RoI Proposal ============

layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: 'rpn_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'rpn_cls_prob'
  top: 'rpn_cls_prob_reshape'
  reshape_param { shape { dim: 0 dim: 18 dim: -1 dim: 0 } }
}
layer {
  name: 'proposal'
  type: 'Python'
  bottom: 'rpn_cls_prob_reshape'
  bottom: 'rpn_bbox_pred'
  bottom: 'im_info'
  top: 'rois'
  python_param {
    module: 'rpn.proposal_layer'
    layer: 'ProposalLayer'
    param_str: "'feat_stride': 16"
  }
}
